{"ast":null,"code":"var _jsxFileName = \"D:\\\\nkurs\\\\client\\\\src\\\\components\\\\CityDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CityDisplay = () => {\n  _s();\n  const [city, setCity] = useState(''); // Состояние для хранения названия города\n\n  useEffect(() => {\n    // Функция для получения геолокации пользователя\n    const getCity = async () => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(async position => {\n          const {\n            latitude,\n            longitude\n          } = position.coords;\n          const response = await fetch(`https://api.bigdatacloud.net/data/reverse-geocode-client?latitude=${latitude}&longitude=${longitude}&localityLanguage=en`);\n          const data = await response.json();\n          setCity(data.locality || 'Неизвестный город'); // Устанавливаем название города\n          sessionStorage.setItem('city', data.locality || 'Неизвестный город'); // Сохраняем в sessionStorage\n        });\n      }\n    };\n    getCity();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: [\"\\u0413\\u043E\\u0440\\u043E\\u0434: \", city]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(CityDisplay, \"DLryFm9ZPq+TjRorcyYzicVm9lY=\");\n_c = CityDisplay;\nexport default CityDisplay;\nvar _c;\n$RefreshReg$(_c, \"CityDisplay\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","CityDisplay","_s","city","setCity","getCity","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","response","fetch","data","json","locality","sessionStorage","setItem","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/nkurs/client/src/components/CityDisplay.js"],"sourcesContent":["\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nconst CityDisplay = () => {\r\n    const [city, setCity] = useState(''); // Состояние для хранения названия города\r\n\r\n    useEffect(() => {\r\n        // Функция для получения геолокации пользователя\r\n        const getCity = async () => {\r\n            if (navigator.geolocation) {\r\n                navigator.geolocation.getCurrentPosition(async (position) => {\r\n                    const { latitude, longitude } = position.coords;\r\n                    const response = await fetch(`https://api.bigdatacloud.net/data/reverse-geocode-client?latitude=${latitude}&longitude=${longitude}&localityLanguage=en`);\r\n                    const data = await response.json();\r\n                    setCity(data.locality || 'Неизвестный город'); // Устанавливаем название города\r\n                    sessionStorage.setItem('city', data.locality || 'Неизвестный город'); // Сохраняем в sessionStorage\r\n                });\r\n            }\r\n        };\r\n\r\n        getCity();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h5>Город: {city}</h5>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CityDisplay;"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEtCD,SAAS,CAAC,MAAM;IACZ;IACA,MAAMQ,OAAO,GAAG,MAAAA,CAAA,KAAY;MACxB,IAAIC,SAAS,CAACC,WAAW,EAAE;QACvBD,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAAC,MAAOC,QAAQ,IAAK;UACzD,MAAM;YAAEC,QAAQ;YAAEC;UAAU,CAAC,GAAGF,QAAQ,CAACG,MAAM;UAC/C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qEAAqEJ,QAAQ,cAAcC,SAAS,sBAAsB,CAAC;UACxJ,MAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;UAClCZ,OAAO,CAACW,IAAI,CAACE,QAAQ,IAAI,mBAAmB,CAAC,CAAC,CAAC;UAC/CC,cAAc,CAACC,OAAO,CAAC,MAAM,EAAEJ,IAAI,CAACE,QAAQ,IAAI,mBAAmB,CAAC,CAAC,CAAC;QAC1E,CAAC,CAAC;MACN;IACJ,CAAC;IAEDZ,OAAO,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIL,OAAA;IAAAoB,QAAA,eACIpB,OAAA;MAAAoB,QAAA,GAAI,kCAAO,EAACjB,IAAI;IAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrB,CAAC;AAEd,CAAC;AAACtB,EAAA,CAzBID,WAAW;AAAAwB,EAAA,GAAXxB,WAAW;AA2BjB,eAAeA,WAAW;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}