{"ast":null,"code":"var _jsxFileName = \"D:\\\\nkurs\\\\client\\\\src\\\\components\\\\CityDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from 'react';\nimport geo from '../assets/geo.png';\nimport CitySelectorModal from '../components/modals/CitySelector';\nimport { Context } from '../index';\nimport { observer } from 'mobx-react-lite';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CityDisplay = _s(observer(_c = _s(() => {\n  _s();\n  const {\n    product\n  } = useContext(Context);\n  const [showModal, setShowModal] = useState(false);\n  const [cities, setCities] = useState([]);\n  const [isDetectingLocation, setIsDetectingLocation] = useState(false);\n\n  // Получаем список городов из базы данных\n  useEffect(() => {\n    const fetchCities = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/prod/cities');\n        if (response.ok) {\n          const data = await response.json();\n          setCities(data);\n\n          // Если в store уже есть выбранный город, используем его\n          if (product.selectedCity) {\n            return;\n          }\n\n          // Иначе пытаемся восстановить из sessionStorage или использовать первый город\n          const savedCity = sessionStorage.getItem('city');\n          if (savedCity && data.includes(savedCity)) {\n            await product.fetchProductsByCity(savedCity);\n          } else if (data.length > 0) {\n            await product.fetchProductsByCity(data[0]);\n          }\n        }\n      } catch (error) {\n        console.error('Ошибка при получении городов:', error);\n      }\n    };\n    fetchCities();\n  }, [product]);\n\n  // Получаем текущее местоположение пользователя\n  const getCurrentLocation = async () => {\n    if (!navigator.geolocation) {\n      console.log('Геолокация не поддерживается');\n      return;\n    }\n    setIsDetectingLocation(true);\n    navigator.geolocation.getCurrentPosition(async position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      try {\n        const response = await fetch(`http://localhost:5000/api/prod/geocode?lat=${latitude}&lng=${longitude}`);\n        if (response.ok) {\n          const data = await response.json();\n          const currentCity = data.city;\n          if (cities.includes(currentCity)) {\n            await product.fetchProductsByCity(currentCity);\n            handleCloseModal();\n          } else {\n            console.log('Определенный город не найден в списке:', currentCity);\n          }\n        }\n      } catch (error) {\n        console.error('Ошибка при определении города:', error);\n        fallbackGeolocation();\n      }\n      setIsDetectingLocation(false);\n    }, async error => {\n      console.error('Ошибка геолокации:', error);\n      fallbackGeolocation();\n      setIsDetectingLocation(false);\n    });\n  };\n  const fallbackGeolocation = async () => {\n    const savedCity = sessionStorage.getItem('city');\n    if (savedCity && cities.includes(savedCity)) {\n      await product.fetchProductsByCity(savedCity);\n    } else if (cities.length > 0) {\n      await product.fetchProductsByCity(cities[0]);\n    }\n  };\n  const handleCityChange = async e => {\n    const newCity = e.target.value;\n    await product.fetchProductsByCity(newCity);\n  };\n  const handleOpenModal = () => {\n    setShowModal(true);\n  };\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n  const handleDetectLocation = () => {\n    getCurrentLocation();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      gap: '10px',\n      cursor: 'pointer'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: geo,\n      style: {\n        width: '24px',\n        height: '24px',\n        opacity: product.isLoading ? 0.6 : 1\n      },\n      alt: \"\\u0413\\u0435\\u043E\\u043B\\u043E\\u043A\\u0430\\u0446\\u0438\\u044F\",\n      onClick: handleOpenModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: handleOpenModal,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontSize: '12px',\n          color: '#666',\n          display: 'block'\n        },\n        children: \"\\u0412\\u0430\\u0448 \\u0433\\u043E\\u0440\\u043E\\u0434\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontSize: '14px',\n          fontWeight: 'bold'\n        },\n        children: product.isLoading ? 'Загрузка...' : product.currentCity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CitySelectorModal, {\n      show: showModal,\n      handleClose: handleCloseModal,\n      cities: cities,\n      selectedCity: product.selectedCity,\n      handleCityChange: handleCityChange,\n      onDetectLocation: handleDetectLocation,\n      isLoading: isDetectingLocation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n}, \"A9m3FupLG1q7QuWD8/cmnmV9y9E=\")), \"A9m3FupLG1q7QuWD8/cmnmV9y9E=\");\n_c2 = CityDisplay;\nexport default CityDisplay;\nvar _c, _c2;\n$RefreshReg$(_c, \"CityDisplay$observer\");\n$RefreshReg$(_c2, \"CityDisplay\");","map":{"version":3,"names":["React","useEffect","useState","useContext","geo","CitySelectorModal","Context","observer","jsxDEV","_jsxDEV","CityDisplay","_s","_c","product","showModal","setShowModal","cities","setCities","isDetectingLocation","setIsDetectingLocation","fetchCities","response","fetch","ok","data","json","selectedCity","savedCity","sessionStorage","getItem","includes","fetchProductsByCity","length","error","console","getCurrentLocation","navigator","geolocation","log","getCurrentPosition","position","latitude","longitude","coords","currentCity","city","handleCloseModal","fallbackGeolocation","handleCityChange","e","newCity","target","value","handleOpenModal","handleDetectLocation","style","display","alignItems","gap","cursor","children","src","width","height","opacity","isLoading","alt","onClick","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","color","fontWeight","show","handleClose","onDetectLocation","_c2","$RefreshReg$"],"sources":["D:/nkurs/client/src/components/CityDisplay.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport geo from '../assets/geo.png'; \r\nimport CitySelectorModal from '../components/modals/CitySelector';\r\nimport { Context } from '../index';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nconst CityDisplay = observer(() => {\r\n    const { product } = useContext(Context);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [cities, setCities] = useState([]);\r\n    const [isDetectingLocation, setIsDetectingLocation] = useState(false);\r\n\r\n    // Получаем список городов из базы данных\r\n    useEffect(() => {\r\n        const fetchCities = async () => {\r\n            try {\r\n                const response = await fetch('http://localhost:5000/api/prod/cities');\r\n                if (response.ok) {\r\n                    const data = await response.json();\r\n                    setCities(data);\r\n                    \r\n                    // Если в store уже есть выбранный город, используем его\r\n                    if (product.selectedCity) {\r\n                        return;\r\n                    }\r\n                    \r\n                    // Иначе пытаемся восстановить из sessionStorage или использовать первый город\r\n                    const savedCity = sessionStorage.getItem('city');\r\n                    if (savedCity && data.includes(savedCity)) {\r\n                        await product.fetchProductsByCity(savedCity);\r\n                    } else if (data.length > 0) {\r\n                        await product.fetchProductsByCity(data[0]);\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                console.error('Ошибка при получении городов:', error);\r\n            }\r\n        };\r\n\r\n        fetchCities();\r\n    }, [product]);\r\n\r\n    // Получаем текущее местоположение пользователя\r\n    const getCurrentLocation = async () => {\r\n        if (!navigator.geolocation) {\r\n            console.log('Геолокация не поддерживается');\r\n            return;\r\n        }\r\n\r\n        setIsDetectingLocation(true);\r\n        \r\n        navigator.geolocation.getCurrentPosition(\r\n            async (position) => {\r\n                const { latitude, longitude } = position.coords;\r\n                \r\n                try {\r\n                    const response = await fetch(\r\n                        `http://localhost:5000/api/prod/geocode?lat=${latitude}&lng=${longitude}`\r\n                    );\r\n                    \r\n                    if (response.ok) {\r\n                        const data = await response.json();\r\n                        const currentCity = data.city;\r\n                        \r\n                        if (cities.includes(currentCity)) {\r\n                            await product.fetchProductsByCity(currentCity);\r\n                            handleCloseModal();\r\n                        } else {\r\n                            console.log('Определенный город не найден в списке:', currentCity);\r\n                        }\r\n                    }\r\n                } catch (error) {\r\n                    console.error('Ошибка при определении города:', error);\r\n                    fallbackGeolocation();\r\n                }\r\n                setIsDetectingLocation(false);\r\n            },\r\n            async (error) => {\r\n                console.error('Ошибка геолокации:', error);\r\n                fallbackGeolocation();\r\n                setIsDetectingLocation(false);\r\n            }\r\n        );\r\n    };\r\n\r\n    const fallbackGeolocation = async () => {\r\n        const savedCity = sessionStorage.getItem('city');\r\n        if (savedCity && cities.includes(savedCity)) {\r\n            await product.fetchProductsByCity(savedCity);\r\n        } else if (cities.length > 0) {\r\n            await product.fetchProductsByCity(cities[0]);\r\n        }\r\n    };\r\n\r\n    const handleCityChange = async (e) => {\r\n        const newCity = e.target.value;\r\n        await product.fetchProductsByCity(newCity);\r\n    };\r\n\r\n    const handleOpenModal = () => {\r\n        setShowModal(true);\r\n    };\r\n\r\n    const handleCloseModal = () => {\r\n        setShowModal(false);\r\n    };\r\n\r\n    const handleDetectLocation = () => {\r\n        getCurrentLocation();\r\n    };\r\n\r\n    return (\r\n        <div style={{ display: 'flex', alignItems: 'center', gap: '10px', cursor: 'pointer' }}>\r\n            <img \r\n                src={geo} \r\n                style={{ \r\n                    width: '24px', \r\n                    height: '24px', \r\n                    opacity: product.isLoading ? 0.6 : 1\r\n                }} \r\n                alt=\"Геолокация\" \r\n                onClick={handleOpenModal}\r\n            />\r\n            <div onClick={handleOpenModal}>\r\n                <span style={{ fontSize: '12px', color: '#666', display: 'block' }}>Ваш город</span>\r\n                <span style={{ fontSize: '14px', fontWeight: 'bold' }}>\r\n                    {product.isLoading ? 'Загрузка...' : product.currentCity}\r\n                </span>\r\n            </div>\r\n            \r\n            <CitySelectorModal \r\n                show={showModal} \r\n                handleClose={handleCloseModal}\r\n                cities={cities}\r\n                selectedCity={product.selectedCity}\r\n                handleCityChange={handleCityChange}\r\n                onDetectLocation={handleDetectLocation}\r\n                isLoading={isDetectingLocation}\r\n            />\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default CityDisplay;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}