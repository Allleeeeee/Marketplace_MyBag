{"ast":null,"code":"var _jsxFileName = \"D:\\\\nkurs\\\\client\\\\src\\\\pages\\\\Shop.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport ProductList from \"../components/ProductList\"; // Импортируйте компонент для отображения продуктов\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"../index\";\nimport { fetchProductBrands, fetchProducts, fetchProductTypes } from \"../http/productAPI\"; // Импортируйте ваши API функции\nimport Pages from \"../components/Pages\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Shop = () => {\n  _s();\n  const {\n    product\n  } = useContext(Context);\n  useEffect(() => {\n    fetchProductTypes().then(data => product.setTypes(data)); // Получение типов продуктов\n    fetchProductBrands().then(data => product.setBrands(data)); // Получение брендов продуктов\n    fetchProducts(null, null, 1, 2).then(data => {\n      product.setProducts(data.rows); // Установка продуктов\n      product.setTotalCount(data.count); // Установка общего количества\n    });\n  }, []);\n  useEffect(() => {\n    fetchProducts(product.selectedType.id, product.selectedBrand.id, product.page, 2).then(data => {\n      product.setProducts(data.rows); // Обновление списка продуктов при изменении фильтров\n      product.setTotalCount(data.count); // Обновление общего количества\n    });\n  }, [product.page, product.selectedType, product.selectedBrand]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: 9,\n        children: [/*#__PURE__*/_jsxDEV(ProductList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(Shop, \"/zrBO1RQ/cZ/QyOPteSQG43GqJE=\");\n_c = Shop;\nexport default _c2 = observer(Shop);\nvar _c, _c2;\n$RefreshReg$(_c, \"Shop\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useContext","useEffect","Container","Row","Col","ProductList","observer","Context","fetchProductBrands","fetchProducts","fetchProductTypes","Pages","jsxDEV","_jsxDEV","Shop","_s","product","then","data","setTypes","setBrands","setProducts","rows","setTotalCount","count","selectedType","id","selectedBrand","page","children","md","fileName","_jsxFileName","lineNumber","columnNumber","_c","_c2","$RefreshReg$"],"sources":["D:/nkurs/client/src/pages/Shop.js"],"sourcesContent":["import React, { useContext, useEffect } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport ProductList from \"../components/ProductList\"; // Импортируйте компонент для отображения продуктов\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Context } from \"../index\";\r\nimport { fetchProductBrands, fetchProducts, fetchProductTypes } from \"../http/productAPI\"; // Импортируйте ваши API функции\r\nimport Pages from \"../components/Pages\";\r\n\r\nconst Shop = () => {\r\n    const { product } = useContext(Context);\r\n\r\n    useEffect(() => {\r\n        fetchProductTypes().then(data => product.setTypes(data)); // Получение типов продуктов\r\n        fetchProductBrands().then(data => product.setBrands(data)); // Получение брендов продуктов\r\n        fetchProducts(null, null, 1, 2).then(data => {\r\n            product.setProducts(data.rows); // Установка продуктов\r\n            product.setTotalCount(data.count); // Установка общего количества\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetchProducts(product.selectedType.id, product.selectedBrand.id, product.page, 2).then(data => {\r\n            product.setProducts(data.rows); // Обновление списка продуктов при изменении фильтров\r\n            product.setTotalCount(data.count); // Обновление общего количества\r\n        });\r\n    }, [product.page, product.selectedType, product.selectedBrand]);\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n              \r\n                <Col md={9}>\r\n                    <ProductList /> {/* Компонент для отображения списка продуктов */}\r\n                           </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default observer(Shop);"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AACpD,SAASC,SAAS,EAAEC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AACrD,OAAOC,WAAW,MAAM,2BAA2B,CAAC,CAAC;AACrD,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,SAASC,OAAO,QAAQ,UAAU;AAClC,SAASC,kBAAkB,EAAEC,aAAa,EAAEC,iBAAiB,QAAQ,oBAAoB,CAAC,CAAC;AAC3F,OAAOC,KAAK,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM;IAAEC;EAAQ,CAAC,GAAGhB,UAAU,CAACO,OAAO,CAAC;EAEvCN,SAAS,CAAC,MAAM;IACZS,iBAAiB,CAAC,CAAC,CAACO,IAAI,CAACC,IAAI,IAAIF,OAAO,CAACG,QAAQ,CAACD,IAAI,CAAC,CAAC,CAAC,CAAC;IAC1DV,kBAAkB,CAAC,CAAC,CAACS,IAAI,CAACC,IAAI,IAAIF,OAAO,CAACI,SAAS,CAACF,IAAI,CAAC,CAAC,CAAC,CAAC;IAC5DT,aAAa,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAACQ,IAAI,CAACC,IAAI,IAAI;MACzCF,OAAO,CAACK,WAAW,CAACH,IAAI,CAACI,IAAI,CAAC,CAAC,CAAC;MAChCN,OAAO,CAACO,aAAa,CAACL,IAAI,CAACM,KAAK,CAAC,CAAC,CAAC;IACvC,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAENvB,SAAS,CAAC,MAAM;IACZQ,aAAa,CAACO,OAAO,CAACS,YAAY,CAACC,EAAE,EAAEV,OAAO,CAACW,aAAa,CAACD,EAAE,EAAEV,OAAO,CAACY,IAAI,EAAE,CAAC,CAAC,CAACX,IAAI,CAACC,IAAI,IAAI;MAC3FF,OAAO,CAACK,WAAW,CAACH,IAAI,CAACI,IAAI,CAAC,CAAC,CAAC;MAChCN,OAAO,CAACO,aAAa,CAACL,IAAI,CAACM,KAAK,CAAC,CAAC,CAAC;IACvC,CAAC,CAAC;EACN,CAAC,EAAE,CAACR,OAAO,CAACY,IAAI,EAAEZ,OAAO,CAACS,YAAY,EAAET,OAAO,CAACW,aAAa,CAAC,CAAC;EAE/D,oBACId,OAAA,CAACX,SAAS;IAAA2B,QAAA,eACNhB,OAAA,CAACV,GAAG;MAAA0B,QAAA,eAEAhB,OAAA,CAACT,GAAG;QAAC0B,EAAE,EAAE,CAAE;QAAAD,QAAA,gBACPhB,OAAA,CAACR,WAAW;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,KAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEpB,CAAC;AAACnB,EAAA,CA7BID,IAAI;AAAAqB,EAAA,GAAJrB,IAAI;AA+BV,eAAAsB,GAAA,GAAe9B,QAAQ,CAACQ,IAAI,CAAC;AAAC,IAAAqB,EAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAF,EAAA;AAAAE,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}