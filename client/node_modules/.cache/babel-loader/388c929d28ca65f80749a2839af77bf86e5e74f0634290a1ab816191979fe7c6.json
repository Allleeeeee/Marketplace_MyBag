{"ast":null,"code":"var _jsxFileName = \"D:\\\\nkurs\\\\client\\\\src\\\\components\\\\CityDisplay.js\",\n  _s = $RefreshSig$();\n// components/CityDisplay.js\nimport React, { useEffect, useState, useContext } from 'react';\nimport { Context } from '../index';\nimport { observer } from 'mobx-react-lite';\nimport geo from '../assets/geo.png';\nimport CitySelectorModal from './modals/CitySelector';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CityDisplay = _s(observer(_c = _s(() => {\n  _s();\n  const {\n    product\n  } = useContext(Context);\n  const [showModal, setShowModal] = useState(false);\n  const [isDetectingLocation, setIsDetectingLocation] = useState(false);\n\n  // Загружаем города при монтировании\n  useEffect(() => {\n    const loadCities = async () => {\n      await product.fetchCities();\n\n      // Если город еще не выбран, пытаемся восстановить или использовать первый из списка\n      if (!product.selectedCity && product.cities.length > 0) {\n        const savedCity = sessionStorage.getItem('city');\n        if (savedCity && product.cities.includes(savedCity)) {\n          await product.fetchProductsByCity(savedCity);\n        } else {\n          await product.fetchProductsByCity(product.cities[0]);\n        }\n      }\n    };\n    loadCities();\n  }, []);\n\n  // Определение местоположения\n  const getCurrentLocation = async () => {\n    if (!navigator.geolocation) {\n      console.log('Геолокация не поддерживается');\n      return;\n    }\n    setIsDetectingLocation(true);\n    navigator.geolocation.getCurrentPosition(async position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      try {\n        const response = await fetch(`http://localhost:5000/api/prod/geocode?lat=${latitude}&lng=${longitude}`);\n        if (response.ok) {\n          const data = await response.json();\n          const currentCity = data.city;\n          if (product.cities.includes(currentCity)) {\n            await product.fetchProductsByCity(currentCity);\n            handleCloseModal();\n          } else {\n            console.log('Определенный город не найден в списке:', currentCity);\n          }\n        }\n      } catch (error) {\n        console.error('Ошибка при определении города:', error);\n      }\n      setIsDetectingLocation(false);\n    }, async error => {\n      console.error('Ошибка геолокации:', error);\n      setIsDetectingLocation(false);\n    });\n  };\n  const handleCityChange = async e => {\n    const newCity = e.target.value;\n    await product.fetchProductsByCity(newCity);\n  };\n  const handleOpenModal = () => {\n    setShowModal(true);\n  };\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n  const handleDetectLocation = () => {\n    getCurrentLocation();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      gap: '10px',\n      cursor: 'pointer'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: geo,\n      style: {\n        width: '24px',\n        height: '24px',\n        opacity: product.isLoading ? 0.6 : 1\n      },\n      alt: \"\\u0413\\u0435\\u043E\\u043B\\u043E\\u043A\\u0430\\u0446\\u0438\\u044F\",\n      onClick: handleOpenModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: handleOpenModal,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontSize: '12px',\n          color: '#666',\n          display: 'block'\n        },\n        children: \"\\u0412\\u0430\\u0448 \\u0433\\u043E\\u0440\\u043E\\u0434\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontSize: '14px',\n          fontWeight: 'bold'\n        },\n        children: product.isLoading ? 'Загрузка...' : product.currentCity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CitySelectorModal, {\n      show: showModal,\n      handleClose: handleCloseModal,\n      cities: product.cities,\n      selectedCity: product.selectedCity,\n      handleCityChange: handleCityChange,\n      onDetectLocation: handleDetectLocation,\n      isLoading: isDetectingLocation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n}, \"tZTApZGD6zGEbJu66aC7g1sfjfo=\")), \"tZTApZGD6zGEbJu66aC7g1sfjfo=\");\n_c2 = CityDisplay;\nexport default CityDisplay;\nvar _c, _c2;\n$RefreshReg$(_c, \"CityDisplay$observer\");\n$RefreshReg$(_c2, \"CityDisplay\");","map":{"version":3,"names":["React","useEffect","useState","useContext","Context","observer","geo","CitySelectorModal","jsxDEV","_jsxDEV","CityDisplay","_s","_c","product","showModal","setShowModal","isDetectingLocation","setIsDetectingLocation","loadCities","fetchCities","selectedCity","cities","length","savedCity","sessionStorage","getItem","includes","fetchProductsByCity","getCurrentLocation","navigator","geolocation","console","log","getCurrentPosition","position","latitude","longitude","coords","response","fetch","ok","data","json","currentCity","city","handleCloseModal","error","handleCityChange","e","newCity","target","value","handleOpenModal","handleDetectLocation","style","display","alignItems","gap","cursor","children","src","width","height","opacity","isLoading","alt","onClick","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","color","fontWeight","show","handleClose","onDetectLocation","_c2","$RefreshReg$"],"sources":["D:/nkurs/client/src/components/CityDisplay.js"],"sourcesContent":["// components/CityDisplay.js\r\nimport React, { useEffect, useState, useContext } from 'react';\r\nimport { Context } from '../index';\r\nimport { observer } from 'mobx-react-lite';\r\nimport geo from '../assets/geo.png'; \r\nimport CitySelectorModal from './modals/CitySelector';\r\n\r\nconst CityDisplay = observer(() => {\r\n    const { product } = useContext(Context);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [isDetectingLocation, setIsDetectingLocation] = useState(false);\r\n\r\n    // Загружаем города при монтировании\r\n    useEffect(() => {\r\n        const loadCities = async () => {\r\n            await product.fetchCities();\r\n            \r\n            // Если город еще не выбран, пытаемся восстановить или использовать первый из списка\r\n            if (!product.selectedCity && product.cities.length > 0) {\r\n                const savedCity = sessionStorage.getItem('city');\r\n                if (savedCity && product.cities.includes(savedCity)) {\r\n                    await product.fetchProductsByCity(savedCity);\r\n                } else {\r\n                    await product.fetchProductsByCity(product.cities[0]);\r\n                }\r\n            }\r\n        };\r\n\r\n        loadCities();\r\n    }, []);\r\n\r\n    // Определение местоположения\r\n    const getCurrentLocation = async () => {\r\n        if (!navigator.geolocation) {\r\n            console.log('Геолокация не поддерживается');\r\n            return;\r\n        }\r\n\r\n        setIsDetectingLocation(true);\r\n        \r\n        navigator.geolocation.getCurrentPosition(\r\n            async (position) => {\r\n                const { latitude, longitude } = position.coords;\r\n                \r\n                try {\r\n                    const response = await fetch(\r\n                        `http://localhost:5000/api/prod/geocode?lat=${latitude}&lng=${longitude}`\r\n                    );\r\n                    \r\n                    if (response.ok) {\r\n                        const data = await response.json();\r\n                        const currentCity = data.city;\r\n                        \r\n                        if (product.cities.includes(currentCity)) {\r\n                            await product.fetchProductsByCity(currentCity);\r\n                            handleCloseModal();\r\n                        } else {\r\n                            console.log('Определенный город не найден в списке:', currentCity);\r\n                        }\r\n                    }\r\n                } catch (error) {\r\n                    console.error('Ошибка при определении города:', error);\r\n                }\r\n                setIsDetectingLocation(false);\r\n            },\r\n            async (error) => {\r\n                console.error('Ошибка геолокации:', error);\r\n                setIsDetectingLocation(false);\r\n            }\r\n        );\r\n    };\r\n\r\n    const handleCityChange = async (e) => {\r\n        const newCity = e.target.value;\r\n        await product.fetchProductsByCity(newCity);\r\n    };\r\n\r\n    const handleOpenModal = () => {\r\n        setShowModal(true);\r\n    };\r\n\r\n    const handleCloseModal = () => {\r\n        setShowModal(false);\r\n    };\r\n\r\n    const handleDetectLocation = () => {\r\n        getCurrentLocation();\r\n    };\r\n\r\n    return (\r\n        <div style={{ display: 'flex', alignItems: 'center', gap: '10px', cursor: 'pointer' }}>\r\n            <img \r\n                src={geo} \r\n                style={{ \r\n                    width: '24px', \r\n                    height: '24px', \r\n                    opacity: product.isLoading ? 0.6 : 1\r\n                }} \r\n                alt=\"Геолокация\" \r\n                onClick={handleOpenModal}\r\n            />\r\n            <div onClick={handleOpenModal}>\r\n                <span style={{ fontSize: '12px', color: '#666', display: 'block' }}>Ваш город</span>\r\n                <span style={{ fontSize: '14px', fontWeight: 'bold' }}>\r\n                    {product.isLoading ? 'Загрузка...' : product.currentCity}\r\n                </span>\r\n            </div>\r\n            \r\n            <CitySelectorModal \r\n                show={showModal} \r\n                handleClose={handleCloseModal}\r\n                cities={product.cities}\r\n                selectedCity={product.selectedCity}\r\n                handleCityChange={handleCityChange}\r\n                onDetectLocation={handleDetectLocation}\r\n                isLoading={isDetectingLocation}\r\n            />\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default CityDisplay;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}