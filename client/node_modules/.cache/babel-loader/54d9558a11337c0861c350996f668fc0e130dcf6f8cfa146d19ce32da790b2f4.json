{"ast":null,"code":"import { makeAutoObservable } from 'mobx';\nclass ProductStore {\n  // Текущая страница\n\n  constructor() {\n    this.products = [];\n    this.totalCount = 0;\n    this.limit = 3;\n    // Установите лимит продуктов на странице\n    this.page = 1;\n    this.fetchProducts = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/prod?page=${this.page}&limit=${this.limit}`);\n        const data = await response.json();\n        this.setProducts(data.rows);\n        this.setTotalCount(data.count);\n      } catch (error) {\n        console.error('Ошибка при получении продуктов:', error);\n      }\n    };\n    makeAutoObservable(this);\n  }\n  setProducts(products) {\n    this.products = products;\n  }\n  setTotalCount(count) {\n    this.totalCount = count;\n  }\n  setPage(page) {\n    this.page = page;\n  }\n}\nexport const productStore = new ProductStore();","map":{"version":3,"names":["makeAutoObservable","ProductStore","constructor","products","totalCount","limit","page","fetchProducts","response","fetch","data","json","setProducts","rows","setTotalCount","count","error","console","setPage","productStore"],"sources":["D:/nkurs/client/src/store/ProductStore.js"],"sourcesContent":["import { makeAutoObservable } from 'mobx';\r\n\r\nclass ProductStore {\r\n    products = [];\r\n    totalCount = 0;\r\n    limit = 3; // Установите лимит продуктов на странице\r\n    page = 1; // Текущая страница\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    setProducts(products) {\r\n        this.products = products;\r\n    }\r\n\r\n    setTotalCount(count) {\r\n        this.totalCount = count;\r\n    }\r\n\r\n    setPage(page) {\r\n        this.page = page;\r\n    }\r\n\r\n    fetchProducts = async () => {\r\n        try {\r\n            const response = await fetch(`http://localhost:5000/api/prod?page=${this.page}&limit=${this.limit}`);\r\n            const data = await response.json();\r\n            this.setProducts(data.rows);\r\n            this.setTotalCount(data.count);\r\n        } catch (error) {\r\n            console.error('Ошибка при получении продуктов:', error);\r\n        }\r\n    };\r\n}\r\n\r\nexport const productStore = new ProductStore();"],"mappings":"AAAA,SAASA,kBAAkB,QAAQ,MAAM;AAEzC,MAAMC,YAAY,CAAC;EAIL;;EAEVC,WAAWA,CAAA,EAAG;IAAA,KALdC,QAAQ,GAAG,EAAE;IAAA,KACbC,UAAU,GAAG,CAAC;IAAA,KACdC,KAAK,GAAG,CAAC;IAAE;IAAA,KACXC,IAAI,GAAG,CAAC;IAAA,KAkBRC,aAAa,GAAG,YAAY;MACxB,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,IAAI,CAACH,IAAI,UAAU,IAAI,CAACD,KAAK,EAAE,CAAC;QACpG,MAAMK,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClC,IAAI,CAACC,WAAW,CAACF,IAAI,CAACG,IAAI,CAAC;QAC3B,IAAI,CAACC,aAAa,CAACJ,IAAI,CAACK,KAAK,CAAC;MAClC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MAC3D;IACJ,CAAC;IAxBGhB,kBAAkB,CAAC,IAAI,CAAC;EAC5B;EAEAY,WAAWA,CAACT,QAAQ,EAAE;IAClB,IAAI,CAACA,QAAQ,GAAGA,QAAQ;EAC5B;EAEAW,aAAaA,CAACC,KAAK,EAAE;IACjB,IAAI,CAACX,UAAU,GAAGW,KAAK;EAC3B;EAEAG,OAAOA,CAACZ,IAAI,EAAE;IACV,IAAI,CAACA,IAAI,GAAGA,IAAI;EACpB;AAYJ;AAEA,OAAO,MAAMa,YAAY,GAAG,IAAIlB,YAAY,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}