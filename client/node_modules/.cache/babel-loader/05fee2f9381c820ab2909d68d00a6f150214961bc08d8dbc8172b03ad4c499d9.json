{"ast":null,"code":"// http/sellerAPI.js\nimport { $authHost } from \"./index\";\nexport const createSeller = async sellerData => {\n  const {\n    data\n  } = await $authHost.post('api/seller', sellerData);\n  return data;\n};\nexport const getSellerByUserId = async userId => {\n  try {\n    const {\n      data\n    } = await $authHost.get(`api/seller/${userId}`);\n    return data;\n  } catch (error) {\n    var _error$response;\n    if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 404) {\n      return null; // Продавец не найден - это нормально\n    }\n    throw error;\n  }\n};\nexport const checkOrCreateSeller = async (userId, sellerName = 'Мой магазин') => {\n  try {\n    console.log('Checking seller for user:', userId);\n\n    // Пытаемся найти существующего продавца\n    let seller = await getSellerByUserId(userId);\n\n    // Если продавец не найден, создаем нового\n    if (!seller) {\n      console.log('Seller not found, creating new one...');\n      seller = await createSeller({\n        name: sellerName,\n        user_id: userId,\n        description: 'Добро пожаловать в мой магазин!'\n      });\n      console.log('New seller created:', seller.id);\n    } else {\n      console.log('Existing seller found:', seller.id);\n    }\n    return seller;\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    console.error('Error in checkOrCreateSeller:', error);\n    if ((_error$response2 = error.response) !== null && _error$response2 !== void 0 && (_error$response2$data = _error$response2.data) !== null && _error$response2$data !== void 0 && _error$response2$data.message) {\n      throw new Error(error.response.data.message);\n    }\n    throw new Error('Ошибка при создании профиля продавца');\n  }\n};","map":{"version":3,"names":["$authHost","createSeller","sellerData","data","post","getSellerByUserId","userId","get","error","_error$response","response","status","checkOrCreateSeller","sellerName","console","log","seller","name","user_id","description","id","_error$response2","_error$response2$data","message","Error"],"sources":["D:/nkurs/client/src/http/sellerAPI.js"],"sourcesContent":["// http/sellerAPI.js\r\nimport { $authHost } from \"./index\";\r\n\r\nexport const createSeller = async (sellerData) => {\r\n    const { data } = await $authHost.post('api/seller', sellerData);\r\n    return data;\r\n};\r\n\r\nexport const getSellerByUserId = async (userId) => {\r\n    try {\r\n        const { data } = await $authHost.get(`api/seller/${userId}`);\r\n        return data;\r\n    } catch (error) {\r\n        if (error.response?.status === 404) {\r\n            return null; // Продавец не найден - это нормально\r\n        }\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const checkOrCreateSeller = async (userId, sellerName = 'Мой магазин') => {\r\n    try {\r\n        console.log('Checking seller for user:', userId);\r\n        \r\n        // Пытаемся найти существующего продавца\r\n        let seller = await getSellerByUserId(userId);\r\n        \r\n        // Если продавец не найден, создаем нового\r\n        if (!seller) {\r\n            console.log('Seller not found, creating new one...');\r\n            seller = await createSeller({\r\n                name: sellerName,\r\n                user_id: userId,\r\n                description: 'Добро пожаловать в мой магазин!'\r\n            });\r\n            console.log('New seller created:', seller.id);\r\n        } else {\r\n            console.log('Existing seller found:', seller.id);\r\n        }\r\n        \r\n        return seller;\r\n    } catch (error) {\r\n        console.error('Error in checkOrCreateSeller:', error);\r\n        \r\n        if (error.response?.data?.message) {\r\n            throw new Error(error.response.data.message);\r\n        }\r\n        throw new Error('Ошибка при создании профиля продавца');\r\n    }\r\n};"],"mappings":"AAAA;AACA,SAASA,SAAS,QAAQ,SAAS;AAEnC,OAAO,MAAMC,YAAY,GAAG,MAAOC,UAAU,IAAK;EAC9C,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMH,SAAS,CAACI,IAAI,CAAC,YAAY,EAAEF,UAAU,CAAC;EAC/D,OAAOC,IAAI;AACf,CAAC;AAED,OAAO,MAAME,iBAAiB,GAAG,MAAOC,MAAM,IAAK;EAC/C,IAAI;IACA,MAAM;MAAEH;IAAK,CAAC,GAAG,MAAMH,SAAS,CAACO,GAAG,CAAC,cAAcD,MAAM,EAAE,CAAC;IAC5D,OAAOH,IAAI;EACf,CAAC,CAAC,OAAOK,KAAK,EAAE;IAAA,IAAAC,eAAA;IACZ,IAAI,EAAAA,eAAA,GAAAD,KAAK,CAACE,QAAQ,cAAAD,eAAA,uBAAdA,eAAA,CAAgBE,MAAM,MAAK,GAAG,EAAE;MAChC,OAAO,IAAI,CAAC,CAAC;IACjB;IACA,MAAMH,KAAK;EACf;AACJ,CAAC;AAED,OAAO,MAAMI,mBAAmB,GAAG,MAAAA,CAAON,MAAM,EAAEO,UAAU,GAAG,aAAa,KAAK;EAC7E,IAAI;IACAC,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAET,MAAM,CAAC;;IAEhD;IACA,IAAIU,MAAM,GAAG,MAAMX,iBAAiB,CAACC,MAAM,CAAC;;IAE5C;IACA,IAAI,CAACU,MAAM,EAAE;MACTF,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC;MACpDC,MAAM,GAAG,MAAMf,YAAY,CAAC;QACxBgB,IAAI,EAAEJ,UAAU;QAChBK,OAAO,EAAEZ,MAAM;QACfa,WAAW,EAAE;MACjB,CAAC,CAAC;MACFL,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEC,MAAM,CAACI,EAAE,CAAC;IACjD,CAAC,MAAM;MACHN,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEC,MAAM,CAACI,EAAE,CAAC;IACpD;IAEA,OAAOJ,MAAM;EACjB,CAAC,CAAC,OAAOR,KAAK,EAAE;IAAA,IAAAa,gBAAA,EAAAC,qBAAA;IACZR,OAAO,CAACN,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IAErD,KAAAa,gBAAA,GAAIb,KAAK,CAACE,QAAQ,cAAAW,gBAAA,gBAAAC,qBAAA,GAAdD,gBAAA,CAAgBlB,IAAI,cAAAmB,qBAAA,eAApBA,qBAAA,CAAsBC,OAAO,EAAE;MAC/B,MAAM,IAAIC,KAAK,CAAChB,KAAK,CAACE,QAAQ,CAACP,IAAI,CAACoB,OAAO,CAAC;IAChD;IACA,MAAM,IAAIC,KAAK,CAAC,sCAAsC,CAAC;EAC3D;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}