{"ast":null,"code":"// import React, { useEffect, useState } from 'react';\n// import io from 'socket.io-client';\n\n// const socket = io('http://localhost:5000'); // Убедитесь, что адрес соответствует вашему серверу\n\n// const Chat = () => {\n//     const [messages, setMessages] = useState([]);\n//     const [messageInput, setMessageInput] = useState('');\n\n//     useEffect(() => {\n//         socket.on('receiveMessage', (message) => {\n//             setMessages((prevMessages) => [...prevMessages, message]);\n//         });\n\n//         return () => {\n//             socket.off('receiveMessage');\n//         };\n//     }, []);\n\n//     const sendMessage = () => {\n//         const senderId = 1; // ID текущего пользователя\n//         const receiverId = 2; // ID пользователя, которому отправляется сообщение\n\n//         socket.emit('sendMessage', { senderId, receiverId, content: messageInput });\n//         setMessageInput('');\n//     };\n\n//     return (\n//         <div>\n//             <div>\n//                 {messages.map((msg, index) => (\n//                     <div key={index}>\n//                         <strong>User {msg.senderId}:</strong> {msg.content}\n//                     </div>\n//                 ))}\n//             </div>\n//             <input\n//                 type=\"text\"\n//                 value={messageInput}\n//                 onChange={(e) => setMessageInput(e.target.value)}\n//                 placeholder=\"Type your message...\"\n//             />\n//             <button onClick={sendMessage}>Send</button>\n//         </div>\n//     );\n// };\n\n// export default Chat;","map":{"version":3,"names":[],"sources":["D:/nkurs/client/src/pages/Chat.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import io from 'socket.io-client';\r\n\r\n// const socket = io('http://localhost:5000'); // Убедитесь, что адрес соответствует вашему серверу\r\n\r\n// const Chat = () => {\r\n//     const [messages, setMessages] = useState([]);\r\n//     const [messageInput, setMessageInput] = useState('');\r\n\r\n//     useEffect(() => {\r\n//         socket.on('receiveMessage', (message) => {\r\n//             setMessages((prevMessages) => [...prevMessages, message]);\r\n//         });\r\n\r\n//         return () => {\r\n//             socket.off('receiveMessage');\r\n//         };\r\n//     }, []);\r\n\r\n//     const sendMessage = () => {\r\n//         const senderId = 1; // ID текущего пользователя\r\n//         const receiverId = 2; // ID пользователя, которому отправляется сообщение\r\n\r\n//         socket.emit('sendMessage', { senderId, receiverId, content: messageInput });\r\n//         setMessageInput('');\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <div>\r\n//                 {messages.map((msg, index) => (\r\n//                     <div key={index}>\r\n//                         <strong>User {msg.senderId}:</strong> {msg.content}\r\n//                     </div>\r\n//                 ))}\r\n//             </div>\r\n//             <input\r\n//                 type=\"text\"\r\n//                 value={messageInput}\r\n//                 onChange={(e) => setMessageInput(e.target.value)}\r\n//                 placeholder=\"Type your message...\"\r\n//             />\r\n//             <button onClick={sendMessage}>Send</button>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default Chat;"],"mappings":"AAAA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}