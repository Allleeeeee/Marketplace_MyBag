{"ast":null,"code":"import { $authHost, $host } from \"./index\";\nimport { jwtDecode } from \"jwt-decode\";\nimport axios from 'axios';\nconst API_URL = 'http://your-api-url';\nexport const registration = async (email, password) => {\n  const {\n    data\n  } = await $host.post('api/user/registration', {\n    username: 'new user',\n    email,\n    password,\n    role: 'ADMIN'\n  });\n  localStorage.setItem('token', data.token);\n  return jwtDecode(data.token);\n};\nexport const login = async (email, password) => {\n  const {\n    data\n  } = await $host.post('api/user/login', {\n    email,\n    password\n  });\n  localStorage.setItem('token', data.token);\n  return jwtDecode(data.token);\n};\nexport const check = async () => {\n  const {\n    data\n  } = await $authHost.get('api/user/auth');\n  localStorage.setItem('token', data.token);\n  return jwtDecode(data.token);\n};\nexport const getUserInfo = async userId => {\n  const {\n    data\n  } = await $authHost.get(`api/user/${userId}`);\n  return data;\n};\nexport const getSellerInfo = async sellerId => {\n  const {\n    data\n  } = await $authHost.get(`api/seller/${sellerId}`);\n  return data;\n};\n\n// Функция для обновления пользователя\nexport const updateUser = async (userId, userData) => {\n  const {\n    data\n  } = await $authHost.put(`api/user/${userId}`, userData);\n  return data;\n};\n\n// Функция для обновления продавца\nexport const updateSeller = async (sellerId, sellerData) => {\n  try {\n    const response = await $authHost.put(`api/seller/${sellerId}`, sellerData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Update seller error:', error);\n    throw error;\n  }\n};\nexport const updateSellerImage = async (id, formData) => {\n  const {\n    data\n  } = await axios.put(`${API_URL}/seller/${id}/image`, formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n  return data;\n};","map":{"version":3,"names":["$authHost","$host","jwtDecode","axios","API_URL","registration","email","password","data","post","username","role","localStorage","setItem","token","login","check","get","getUserInfo","userId","getSellerInfo","sellerId","updateUser","userData","put","updateSeller","sellerData","response","headers","error","console","updateSellerImage","id","formData"],"sources":["D:/nkurs/client/src/http/userAPI.js"],"sourcesContent":["import { $authHost, $host } from \"./index\";\r\nimport { jwtDecode } from \"jwt-decode\"; \r\n\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'http://your-api-url'; \r\nexport const registration = async (email, password) => {\r\n    const { data } = await $host.post('api/user/registration', {\r\n        username:'new user',\r\n        email, \r\n        password, \r\n        role: 'ADMIN'\r\n    });\r\n    localStorage.setItem('token', data.token);\r\n    return jwtDecode(data.token); \r\n}\r\n\r\nexport const login = async (email, password) => {\r\n    const { data } = await $host.post('api/user/login', { email, password });\r\n    localStorage.setItem('token', data.token);\r\n    return jwtDecode(data.token); \r\n}\r\n\r\nexport const check = async () => {\r\n    const { data } = await $authHost.get('api/user/auth');\r\n    localStorage.setItem('token', data.token);\r\n    return jwtDecode(data.token); \r\n}\r\n\r\nexport const getUserInfo = async (userId) => {\r\n    const { data } = await $authHost.get(`api/user/${userId}`);\r\n    return data;\r\n};\r\n\r\nexport const getSellerInfo = async (sellerId) => {\r\n    const { data } = await $authHost.get(`api/seller/${sellerId}`);\r\n    return data;};\r\n\r\n    // Функция для обновления пользователя\r\nexport const updateUser = async (userId, userData) => {\r\n    const { data } = await $authHost.put(`api/user/${userId}`, userData);\r\n    return data;\r\n};\r\n\r\n// Функция для обновления продавца\r\nexport const updateSeller = async (sellerId, sellerData) => {\r\n    try {\r\n        const response = await $authHost.put(`api/seller/${sellerId}`, sellerData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data',\r\n            },\r\n        });\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Update seller error:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport const updateSellerImage = async (id, formData) => {\r\n    const { data } = await axios.put(`${API_URL}/seller/${id}/image`, formData, {\r\n        headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n        },\r\n    });\r\n    return data;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}